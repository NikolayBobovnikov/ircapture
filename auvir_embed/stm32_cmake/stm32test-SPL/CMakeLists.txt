SET( CMAKE_EXPORT_COMPILE_COMMANDS ON )

set(TOOLCHAIN_PREFIX ${CMAKE_CURRENT_SOURCE_DIR}/../../toolchain/gcc-arm-none-eabi-4_9-2015q2)
set(THIRDPARTY_STM32LIB_PATH ${CMAKE_CURRENT_SOURCE_DIR}/Libraries)
set(TARGET_TRIPLET arm-none-eabi)
set(STM32_CHIP STM32F103C8)
set(STM32_FAMILY F1)
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/../cmake)
set(CMAKE_TOOLCHAIN_FILE ${CMAKE_MODULE_PATH}/gcc_stm32.cmake)
set(SPL_DIR ${THIRDPARTY_STM32LIB_PATH}/SPL)
set(CMSIS_DIR ${THIRDPARTY_STM32LIB_PATH}/CMSIS)
#
SET(SPL_INCLUDE_DIRS
    ${SPL_DIR}/inc/
    ${CMSIS_DIR}/CM3/DeviceSupport/ST/STM32F10x/
    ${CMSIS_DIR}/CM3/CoreSupport/
)

# Startup files
SET(STM32_STARTUP_CL ${CMSIS_DIR}/CM3/DeviceSupport/ST/STM32F10x/startup/gcc_ride7/startup_stm32f10x_cl.s)
SET(STM32_STARTUP_HD ${CMSIS_DIR}/CM3/DeviceSupport/ST/STM32F10x/startup/gcc_ride7/startup_stm32f10x_hd.s)
SET(STM32_STARTUP_HD_VL ${CMSIS_DIR}/CM3/DeviceSupport/ST/STM32F10x/startup/gcc_ride7/startup_stm32f10x_hd_vl.s)
SET(STM32_STARTUP_LD ${CMSIS_DIR}/CM3/DeviceSupport/ST/STM32F10x/startup/gcc_ride7/startup_stm32f10x_ld.s)
SET(STM32_STARTUP_LD_VL ${CMSIS_DIR}/CM3/DeviceSupport/ST/STM32F10x/startup/gcc_ride7/startup_stm32f10x_ld_vl.s)
SET(STM32_STARTUP_MD ${CMSIS_DIR}/CM3/DeviceSupport/ST/STM32F10x/startup/gcc_ride7/startup_stm32f10x_md.s)
SET(STM32_STARTUP_MD_VL ${CMSIS_DIR}/CM3/DeviceSupport/ST/STM32F10x/startup/gcc_ride7/startup_stm32f10x_md_vl.s)
SET(STM32_STARTUP_XL ${CMSIS_DIR}/CM3/DeviceSupport/ST/STM32F10x/startup/gcc_ride7/startup_stm32f10x_xl.s)

# CMSIS source
SET(STM32_SYSTEM_SOURCE ${CMSIS_DIR}/CM3/DeviceSupport/ST/STM32F10x/system_stm32f10x.c)

# SPL modules 
SET(STM32_MISC_SOURCE ${SPL_DIR}/src/misc.c)
SET(STM32_ADC_SOURCE ${SPL_DIR}/src/stm32f10x_adc.c)
SET(STM32_BKP_SOURCE ${SPL_DIR}/src/stm32f10x_bkp.c)
SET(STM32_CAN_SOURCE ${SPL_DIR}/src/stm32f10x_can.c)
SET(STM32_CEC_SOURCE ${SPL_DIR}/src/stm32f10x_cec.c)
SET(STM32_CRC_SOURCE ${SPL_DIR}/src/stm32f10x_crc.c)
SET(STM32_DAC_SOURCE ${SPL_DIR}/src/stm32f10x_dac.c)
SET(STM32_DBGMCU_SOURCE ${SPL_DIR}/src/stm32f10x_dbgmcu.c)
SET(STM32_DMA_SOURCE ${SPL_DIR}/src/stm32f10x_dma.c)
SET(STM32_EXTI_SOURCE ${SPL_DIR}/src/stm32f10x_exti.c)
SET(STM32_FLASH_SOURCE ${SPL_DIR}/src/stm32f10x_flash.c)
SET(STM32_FSMC_SOURCE ${SPL_DIR}/src/stm32f10x_fsmc.c)
SET(STM32_GPIO_SOURCE ${SPL_DIR}/src/stm32f10x_gpio.c)
SET(STM32_I2C_SOURCE ${SPL_DIR}/src/stm32f10x_i2c.c)
SET(STM32_IWDG_SOURCE ${SPL_DIR}/src/stm32f10x_iwdg.c)
SET(STM32_PWR_SOURCE ${SPL_DIR}/src/stm32f10x_pwr.c)
SET(STM32_RCC_SOURCE ${SPL_DIR}/src/stm32f10x_rcc.c)
SET(STM32_RTC_SOURCE ${SPL_DIR}/src/stm32f10x_rtc.c)
SET(STM32_SDIO_SOURCE ${SPL_DIR}/src/stm32f10x_sdio.c)
SET(STM32_SPI_SOURCE ${SPL_DIR}/src/stm32f10x_spi.c)
SET(STM32_TIM_SOURCE ${SPL_DIR}/src/stm32f10x_tim.c)
SET(STM32_USART_SOURCE ${SPL_DIR}/src/stm32f10x_usart.c)
SET(STM32_WWDG_SOURCE ${SPL_DIR}/src/stm32f10x_wwdg.c)



#=======================================================================================================

PROJECT(stm32test)

CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
ENABLE_LANGUAGE(ASM)

## Preprocessor definitions. required by STM library.
ADD_DEFINITIONS(
# Here should be ship type (MD, MD_VL, ...)
  -DSTM32F10X_MD
  -DUSE_STDPERIPH_DRIVER
)


# Startup file
SET(STARTUP_SOURCE ${STM32_STARTUP_MD})

# Modules which are to be compiled
SET(MOD_SOURCES
#  ${STM32_MISC_SOURCE}
#  ${STM32_ADC_SOURCE}
#  ${STM32_BKP_SOURCE}
#  ${STM32_CAN_SOURCE}
#  ${STM32_CEC_SOURCE}
#  ${STM32_CRC_SOURCE}
#  ${STM32_DAC_SOURCE}
#  ${STM32_DBGMCU_SOURCE}
#  ${STM32_DMA_SOURCE}
#  ${STM32_EXTI_SOURCE}
#  ${STM32_FLASH_SOURCE}
#  ${STM32_FSMC_SOURCE}
  ${STM32_GPIO_SOURCE}
#  ${STM32_I2C_SOURCE}
#  ${STM32_IWDG_SOURCE}
#  ${STM32_PWR_SOURCE}
  ${STM32_RCC_SOURCE}
#  ${STM32_RTC_SOURCE}
#  ${STM32_SDIO_SOURCE}
#  ${STM32_SPI_SOURCE}
#  ${STM32_TIM_SOURCE}
#  ${STM32_USART_SOURCE}
#  ${STM32_WWDG_SOURCE}
)
# sources of standard interrupt handlers and CMSIS
SET(SERVICE_SOURCES
  stm32f10x_it.c
  ${STM32_SYSTEM_SOURCE}
)

INCLUDE_DIRECTORIES(
  ${CMAKE_CURRENT_SOURCE_DIR}/.
  ${SPL_INCLUDE_DIRS}
)

SET(PROJECT_SOURCES 
    main.c
    )

# Build everything into elf
ADD_EXECUTABLE(
    ${CMAKE_PROJECT_NAME}.elf
    ${STARTUP_SOURCE}
    ${SERVICE_SOURCES}
    ${PROJECT_SOURCES}
    ${MOD_SOURCES}
    )

# Convert 'elf' into 'hex' and 'bin'
ADD_CUSTOM_COMMAND(TARGET ${CMAKE_PROJECT_NAME}.elf POST_BUILD COMMAND ${CMAKE_OBJCOPY} ARGS -Oihex ${CMAKE_PROJECT_NAME}.elf ${CMAKE_PROJECT_NAME}.hex)
ADD_CUSTOM_COMMAND(TARGET ${CMAKE_PROJECT_NAME}.elf POST_BUILD COMMAND ${CMAKE_OBJCOPY} ARGS -Obinary ${CMAKE_PROJECT_NAME}.elf ${CMAKE_PROJECT_NAME}.bin)


#STM32_SET_TARGET_PROPERTIES(${CMAKE_PROJECT_NAME})
#STM32_ADD_HEX_BIN_TARGETS(${CMAKE_PROJECT_NAME})
